static const WHITE = [0, 2, 4, 5, 7, 9, 11]
static const BLACK = [1, 3, 6, 8, 10]
static const X = {
  0:  0,
  1:  0.5,
  2:  1,
  3:  1.5,
  4:  2,
  5:  3,
  6:  3.5,
  7:  4,
  8:  4.5,
  9:  5,
  10: 5.5,
  11: 6
}
static const MAP = 'zsxdcvgbhnmq2w3er5t6y7u'

class {

  keys () {
    return [...Array(24)].map((_,i)=>i)
  }

  key (i) {
    const octave = Math.floor(i / 12)
    const degree = i % 12
    const width = 100 / 14
    return {
      x: (7 * octave + X[degree]) * width + '%',
      y: '0',
      width: width + '%',
      rx: '5',
      ry: '5'
    }
  }

  whiteKey (i) {
    return Object.assign(this.key(i), {
      height: '100%',
      fill: 'white',
      stroke: 'black'
    })
  }

  blackKey (i) {
    return Object.assign(this.key(i), {
      height: '70%',
      fill: 'black',
      stroke: 'white'
    })
  }

}

.Piano
  svg width="100%" height="100%"
    rect for (i in WHITE) ${component.whiteKey(i,    'white')}
      text -- ${MAP[i]}
    rect for (i in BLACK) ${component.blackKey(i,    'black')}
      text -- ${MAP[i]}
    rect for (i in WHITE) ${component.whiteKey(i+12, 'white')}
      text -- ${MAP[i]}
    rect for (i in BLACK) ${component.blackKey(i+12, 'black')}
      text -- ${MAP[i]}
