static const d3 = require('d3')
static const X_FACTOR = 25
static const Y_FACTOR = 33.3

class {
  onCreate () {
    this.state = {
      notes: require('../data/drums.js'),
      axisX: d3.scaleLinear().domain([0,   1]).range(['0%', '100%']),
      axisY: d3.scaleLinear().domain([127, 0]).range(['0%', '100%']),
    }
  }

  getPosition ({ x, y, playhead }) {
    return {
      x: X_FACTOR * (x - playhead) + '%',
      y: Y_FACTOR * y + '%'
    }
  }

  getSize () {}

  gridLines () {
    return [...Array(5)].map((_, i)=>i/4)
  }

  gridLine (i) {
    const x = i * 100 + '%'
    return {
      stroke: (i === 0) ? '#333' : '#111',
      x1: x,
      x2: x,
      y1: '0%',
      y2: '100%'
    }
  }

}

svg.Bar ${component.getPosition(input)}
  g.BarContents transform="scale(0.25 0.25)"
    rect x="0%" y="0%" width="100%" height="100%" stroke="#333"
    g.TimeGrid
      line.TimeGridLine for (i in component.gridLines()) ${component.gridLine(i)}
    g.Section
      rect x="0%"    y="15%" width="5%" height="1%" fill="red"
      rect x="12.5%" y="15%" width="5%" height="1%" fill="red"
      rect x="25%"   y="15%" width="5%" height="1%" fill="red"
      rect x="37.5%" y="15%" width="5%" height="1%" fill="red"
    g.Section
      circle cx="0%"    cy="25%" r="5px" fill="green"
      circle cx="12.5%" cy="25%" r="5px" fill="green"
      circle cx="25%"   cy="25%" r="5px" fill="green"
      circle cx="37.5%" cy="25%" r="5px" fill="green"
    g.Section
      path d="M10 80 C 40 10, 65 10, 95 80 S 150 150, 180 80" stroke="blue" fill="transparent"
